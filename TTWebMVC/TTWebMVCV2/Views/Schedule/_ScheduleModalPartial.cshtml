@model ScheduleDefModalViewModel
@{
   string formAction = Model.HasValidId() ? Url.Action("Update", "Schedule") : Url.Action("Create", "Schedule");
}
<div class="modal-background"></div>
<div class="modal-card">
   <header class="modal-card-head">
      <p class="modal-card-title">
         <span class="icon">
            <i class="far fa-clock" aria-hidden="true"></i>
         </span>
         <span class="has-icon-left">New schedule</span>
      </p>
      <button class="delete" data-modal-close="true" aria-label="close"></button>
   </header>
   <section class="modal-card-body">
      <form id="scheduleModalForm" 
            method="post" 
            action="@formAction"
            asp-antiforgery="true">
         <fieldset>
            @Html.HiddenFor(m => m.Id)
            <div class="field is-horizontal">
               <div class="field-label">
                  @Html.LabelFor(m => m.Name, new { @class = "label" })
               </div>
               <div class="field-body">
                  <div class="field">
                     <p class="control is-expanded">
                        @Html.TextBoxFor(m => m.Name, new { @class = "input" })
                     </p>
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.Name)
                     </p>
                  </div>
               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label">
                  @Html.LabelFor(m => m.FacebookCredentialId, new { @class = "label" })
               </div>
               <div class="field-body">
                  <div class="field">
                     <p class="control is-expanded">
                        @Html.TextBoxFor(m => m.FacebookCredentialId, new { @class = "input" })
                     </p>
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.FacebookCredentialId)
                     </p>
                  </div>
               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label">
                  @Html.LabelFor(m => m.FriendId, new { @class = "label" })
               </div>
               <div class="field-body">
                  <div class="field">
                     <p class="control is-expanded">
                        @Html.TextBoxFor(m => m.FriendId, new { @class = "input" })
                     </p>
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.FriendId)
                     </p>
                  </div>
               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label">
                  @Html.LabelFor(m => m.Type, new { @class = "label" })
               </div>
               <div class="field-body">
                  <div class="field is-narrow">
                     @foreach (string scheduleType in Model.ScheduleTypes)
                     {
                        <div class="control">

                           <label class="radio">
                              @Html.RadioButtonFor(m => m.Type, scheduleType)
                              @scheduleType
                           </label>
                        </div>
                     }
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.Type)
                     </p>
                  </div>
               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label">
                  @Html.LabelFor(m => m.IntervalType, new { @class = "label" })
               </div>
               <div class="field-body">
                  <div class="field is-narrow">
                     @foreach (string intervalType in Model.IntervalTypes)
                     {
                        <div class="control">
                           <label class="radio">
                              @Html.RadioButtonFor(m => m.IntervalType, intervalType, new { @id = "" })
                              @intervalType
                           </label>
                        </div>
                     }
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.IntervalType)
                     </p>
                  </div>
               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label">
                  <label class="label">Time</label>
               </div>
               <div class="field-body">
                  <div class="field">
                     <p class="control is-expanded">
                        @Html.TextBoxFor(m => m.TimeFrom, new { @class = "input", @type = "time" })
                     </p>
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.TimeFrom)
                     </p>
                  </div>
                  <div class="field">
                     <p class="control is-expanded">
                        @Html.TextBoxFor(m => m.TimeTo, new { @class = "input", @type = "time" })
                     </p>
                     <p class="help is-danger">
                        @Html.ValidationMessageFor(m => m.TimeTo)
                     </p>
                  </div>

               </div>
            </div>

            <div class="field is-horizontal">
               <div class="field-label"></div>
               <div class="field-body">
                  <div class="field is-narrow">
                     <div class="control">
                        <div class="select is-fullwidth">
                           @Html.DropDownListFor(m => m.TimeZone, Model.TimeZones)
                        </div>
                     </div>
                  </div>
               </div>
            </div>

         </fieldset>
      </form>
   </section>
   <footer class="modal-card-foot" style="justify-content: space-between;">
      <a class="button is-danger ajax"
         href="@Url.Action("Delete", "Schedule")"
         data-params-id="@Model.Id"
         data-success-reload="true">Delete</a>
      <button type="submit" class="button is-success" form="scheduleModalForm">Save changes</button>
   </footer>
</div>
